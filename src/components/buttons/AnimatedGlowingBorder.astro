---
export interface Props {
  text: string,
  glowAnimation?: string,
  glowOffset?: string,
}

const { text, glowAnimation = true, glowOffset = false } = Astro.props;
---



<button 
  class="button glow-effect"
  data-glow-animation={glowAnimation}
  data-glow-offset={glowOffset}
  >
  {text}
  <svg class="glow-container">
    <rect pathLength="100" stroke-linecap="round" class="glow-blur"></rect>
    <rect pathLength="100" stroke-linecap="round" class="glow-line"></rect>
  </svg>
</button>

<style>
  *, *::before, *::after {
    box-sizing: border-box;
  }
  html {
    --button-radius: 0.75rem;
    /* --button-radius: 1.25rem; */
  }

  .button {
    cursor: pointer;
    font-size: 2rem
    font-family: inherit;
    font-weight: 700;
    color: hsl(320, 40%, 40%);
    background-color:hsl(349 100% 95%);
    padding: 0.75em 1.25em;
    border: 0;
    border-radius: var(--button-radius);
  }

  .glow-effect {
    /* glow effects settings */
    --glow-line-color: #fff;
    --glow-line-thickness: 2px;
    --glow-line-length: 20px;
    --glow-blur-color: #fff;
    --glow-blur-size: 10px;
    --glow-offset: 0px;
    --animation-speed: 1200ms;

      /* button size calculations */
      --container-offset: 100px;
      position: relative;
  }
  .glow-container {
    pointer-events: none;
    position: absolute;
    inset: calc(var(--container-offset) / -2);
    width: calc(100% + var(--container-offset));
    height: calc(100% + var(--container-offset));
    opacity: 0;
    /* outline: 3px solid blue; */
  }

  .glow-blur,
  .glow-line {
    width: calc(100% - var(--container-offset) + var(--glow-offset));
    height: calc(100% - var(--container-offset) + var(--glow-offset));
    x: calc((var(--container-offset) / 2) + var(--glow-offset) / -2);
    y: calc((var(--container-offset) / 2) + var(--glow-offset) / -2);
    rx: var(--button-radius);
    fill:transparent;
    stroke: black;
    stroke-width: 5px;
    stroke-dasharray: var(--glow-line-length) calc(50px - var(--glow-line-length));
    }

  .glow-effect:is(:hover, :focus) :is(.glow-line, .glow-blur) {
    stroke-dashoffset: -80px;
    transition: 
      stroke-dashoffset 
      var(--animation-speed)
      ease-in;
  }
  .glow-line {
    stroke: var(--glow-line-color);
    stroke-width: var(--glow-line-thickness);
  }
  .glow-blur {
    filter: blur(var(--glow-blur-size));
    stroke: var(--glow-blur-color);
    stroke-width: var(--glow-blur-size);
  }

  .glow-effect:is(:hover, :focus) .glow-container {
    animation: 
      glow-visibility 
      ease-in-out
      var(--animation-speed);
  }
  @keyframes glow-visibility {
    0%, 100%{ opacity: 0 }
    25%, 75% { opacity: 1 }
  }

  /* This is to turn off the glow animation. The data attribute could be passed as a prop, or just set up in the html (good for if you're not using a framework) */
  .glow-effect[data-glow-animation="false"] {
    --glow-line-length: 50px;
  }

  .glow-effect[data-glow-offset="true"] {
    --glow-offset: 10px;
  }
</style>